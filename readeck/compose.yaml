version: "3.9"
services:
  app:
    image: codeberg.org/readeck/readeck:0.15.1
    container_name: readeck
    networks:
      - caddy
      - internal
    depends_on:
      db:
        condition: service_healthy
    labels:
      - caddy=${DOMAIN}
      - caddy.reverse_proxy="{{upstreams 8000}}"
      - caddy.tls=/etc/ssl/certs/caddy/${ROOT_DOMAIN}.pem /etc/ssl/private/caddy/${ROOT_DOMAIN}.pem
    environment:
      # The URL of the instance's database.
      - READECK_DATABASE_SOURCE=postgres://readeck:${POSTGRES_PASSWORD}@readeck-db:5432/readeck
      # Defines the application log level. Can be error, warning, info, debug.
      - READECK_LOG_LEVEL=info
      # The IP address on which Readeck listens.
      - READECK_SERVER_HOST=0.0.0.0
      # The TCP port on which Readeck listens. Update container port above to match (right of colon).
      - READECK_SERVER_PORT=8000
      # The URL prefix of Readeck.
      - READECK_SERVER_PREFIX=/
      # A list of hostnames allowed in HTTP requests. Required for reverse proxy configuration.
      - READECK_ALLOWED_HOSTS=${DOMAIN}
      # Use the 'X-Forwarded-' headers. Required for reverse proxy configuration.
      - READECK_USE_X_FORWARDED=true
    volumes:
      - readeck-data:/readeck
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/bin/readeck", "healthcheck", "-config", "config.toml"]
      interval: 30s
      timeout: 2s
      retries: 3

  db:
    image: postgres:16
    container_name: readeck-db
    networks:
      - internal
    environment:
      - POSTGRES_DB=readeck
      - POSTGRES_USER=readeck
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - readeck-db:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "readeck"]
      interval: 10s
      start_period: 30s
volumes:
  readeck-data:
    name: readeck-data
  readeck-db:
    name: readeck-db

networks:
  caddy:
    external: true
  internal:
    external: false
    internal: true
    driver: bridge
    name: readeck-internal